apiVersion: v1
kind: Secret
metadata:
  name: aws
type: Opaque
stringData:
  AWS_ACCESS_KEY: ""
  AWS_SECRET_KEY: ""

---

apiVersion: v1
kind: Secret
metadata:
  name: google
type: Opaque
stringData:
  # Service account credentials in JSON format. 
  GOOGLE_CREDENTIALS_JSON: |-
              {
                "type": "service_account",
                "project_id": "dev",
                "private_key_id": "e1e4ad14a8d234adf4963d398863ad12444df",
                "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQQWFNBgkqhkiG9w0BAQEFAASCB...R6Y=\n-----END PRIVATE KEY-----\n",
                "client_email": "tst-27@dev.iam.gserviceaccount.com",
                "client_id": "11547922342598721477",
                "auth_uri": "https://accounts.google.com/o/oauth2/auth",
                "token_uri": "https://oauth2.googleapis.com/token",
                "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
                "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/gstst-27%40dev.iam.gserviceaccount.com"
              }
---

apiVersion: sources.triggermesh.io/v1alpha1
kind: AWSS3Source
metadata:
  name: my-bucket
spec:
  # This should point to your aws s3 bucket IE: arn:aws:s3:us-west-2:925906438773:demobkt-triggermesh
  arn: ""
  credentials:
    accessKeyID:
      valueFromSecret:
        key: AWS_ACCESS_KEY
        name: aws
    secretAccessKey:
      valueFromSecret:
        key: AWS_SECRET_KEY
        name: aws
  eventTypes:
  - s3:ObjectCreated:*
  sink:
    ref:
      apiVersion: eventing.knative.dev/v1
      kind: Broker
      name: default

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
 name: tensformation
spec:
 template:
  spec:
   containers:
    - image: gcr.io/fit-stream-305821/tensformation
      env:
      # This should point to the broker in the namespace ie: http://broker-ingress.knative-eventing.svc.cluster.local/jeff/default
        - name: K_SINK
          value: ""
        - name: AWS_REGION
          value: ""
      # This should point the the deployed tensorflow service ie: https://tf-inference-server.jeff.k.triggermesh.io/v1/models/anpr:predict
      # Please note, the endpoint of '/models/anpr:predict' must be used here.
        - name: TENSORFLOW_ENDPOINT
          value: ""
      envFrom: 
        - secretRef:
            name: aws

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: tensformation
spec:
  broker: default
  filter:
    attributes:
      type: com.amazon.s3.objectcreated
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: tensformation

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: tensorflow-client
  labels:
    serving.knative.dev/visibility: cluster-local
spec:
  template:
    spec:
      containers:
      - image: gcr.io/fit-stream-305821/tfclient
        env:
         # This should point to the broker in the namespace ie: http://broker-ingress.knative-eventing.svc.cluster.local/jeff/default
          - name: K_SINK
            value: ""
         # The Google sheet ID to be updated
          - name: SHEET_ID
            value: ""
        envFrom: 
          - secretRef:
              name: google

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: tensorflow-client
spec:
  broker: default
  filter:
    attributes:
      type: io.triggermesh.transformations.s3-tensorflow.response
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: tensorflow-client

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
    name: all-display
spec:
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      containers:
       -  image: gcr.io/knative-releases/knative.dev/eventing-contrib/cmd/event_display@sha256:46d5a66f300c3ced590835d379a0e9badf413ae7ab60f21a2550ecedbc9eb9d3

# OR if you want sockeye 
# docker.io/n3wscott/sockeye:v0.5.0@sha256:64c22fe8688a6bb2b44854a07b0a2e1ad021cd7ec52a377a6b135afed5e9f5d2

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
    name: all-display-trigger
spec:
    broker: default
    filter: {}
    subscriber:
        ref:
            apiVersion: serving.knative.dev/v1
            kind: Service
            name: all-display
